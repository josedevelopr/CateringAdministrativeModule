@model Dominio.Core.Entities.Trabajador

@{
    ViewBag.Title = "Agregar Trabajador";
    Layout = "~/Views/Shared/_principalSharedView.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">Clientes</div>
        <div class="card-body">
            <div class="card-title">
                <h3 class="text-center title-2">@ViewBag.Title</h3>
            </div>

            <div class="form-horizontal">

              
                <div class="form-group">
                    @Html.LabelFor(model => model.tr_int_idusu, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="hidden" name="tr_int_idusu" id="tr_int_idusu" />
                        <input type="text" name="tr_int_idusu_des" id="tr_int_idusu_des" readonly class = "form-control"/>
                        @Html.ValidationMessageFor(model => model.tr_int_idusu, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="col-md-2">
                        <a id="btnUsuarios" href="#" class="btn  btn-sm btn-success" data-toggle="modal" data-target="#UsuarioModal">Usuarios</a>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_int_idtipotrab, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="hidden" name="tr_int_idtipotrab" id="tr_int_idtipotrab" />
                        <input type="text" name="tr_int_idtipotrab_des" id="tr_int_idtipotrab_des" readonly class = "form-control"/>
                        @Html.ValidationMessageFor(model => model.tr_int_idtipotrab, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    <div class="col-md-2">
                        <a id="btnTipoTrabajador" href="#" class="btn  btn-sm btn-success" data-toggle="modal" data-target="#TipoTrabajadorModal">Tipo Trabajador</a>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_vchar_nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tr_vchar_nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tr_vchar_nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_vchar_apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tr_vchar_apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tr_vchar_apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_char_dni, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tr_char_dni, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tr_char_dni, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_vchar_direc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tr_vchar_direc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tr_vchar_direc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_vchar_foto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tr_vchar_foto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tr_vchar_foto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tr_vchar_correo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tr_vchar_correo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tr_vchar_correo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tt_vchar_descr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tt_vchar_descr, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tt_vchar_descr, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.us_vchar_nomusu, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.us_vchar_nomusu, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.us_vchar_nomusu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            <style>
                .modal-backdrop {
                    z-index: 1040 !important;
                }

                .modal-backdrop {
                    /* bug fix - no overlay */
                    display: none;
                }

                .modal {
                    text-align: center;
                    padding: 0 !important;
                }

                    .modal:before {
                        content: '';
                        display: inline-block;
                        height: 100%;
                        vertical-align: middle;
                        margin-right: -4px;
                    }

                .modal-dialog {
                    width: 500px;
                    display: inline-block;
                    text-align: left;
                    vertical-align: middle;
                }

                .scrollable {
                    height: 100px;
                    overflow-y: scroll;
                }
            </style>

            <!-- Modal Usuario-------------->
            <div class="modal fade" id="UsuarioModal" tabindex="-1" role="dialog" aria-labelledby="UsuarioModal" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Usuarios</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body scrollable" style='overflow:auto;height:200px;'>
                            <div class="" style=" width:100%; height:auto;">
                                <div class="form-group">
                                    <label for="exampleFormControlSelect2">Seleccione un usuario</label>
                                    <select multiple class="form-control" id="slctUSuario">
                                        @{ List<Dominio.Core.Entities.Usuario> lstUsuario = new List<Dominio.Core.Entities.Usuario>();
                                            lstUsuario = (List<Dominio.Core.Entities.Usuario>)ViewBag.ListaUsuario;}
                                        @foreach (var Usuario in lstUsuario)
                                        {
                                            <option value="@Usuario.us_int_idusu">

                                                @Usuario.us_vchar_nomusu
                                            </option>
                                        }

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" id="btnCerrarUsuario" data-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-primary" id="btnElegirUsuario">Elegir</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal TipoTrabajador-------------->
            <div class="modal fade" id="TipoTrabajadorModal" tabindex="-1" role="dialog" aria-labelledby="TipoTrabajadorModal" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Tipo Trabajador</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body scrollable" style='overflow:auto;height:200px;'>
                            <div class="" style=" width:100%; height:auto;">
                                <div class="form-group">
                                    <label for="exampleFormControlSelect2">Seleccione un tipo de trabajador</label>
                                    <select multiple class="form-control" id="slctTipoTrabajador">
                                        @{ List<Dominio.Core.Entities.TipoTrabajador> lstTipoTrabajador = new List<Dominio.Core.Entities.TipoTrabajador>();
                                            lstTipoTrabajador = (List<Dominio.Core.Entities.TipoTrabajador>)ViewBag.ListaTipoTrabajador;}
                                        @foreach (var TipoTrabajador in lstTipoTrabajador)
                                        {
                                            <option value="@TipoTrabajador.tt_int_idtipotrab">

                                                @TipoTrabajador.tt_vchar_descr
                                            </option>
                                        }

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" id="btnCerrarTipoTrabajador" data-dismiss="modal">Cerrar</button>
                            <button type="button" class="btn btn-primary" id="btnElegirTipoTrabajador">Elegir</button>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                //Variables para modal Usario
                var btnUsuarios = document.getElementById("btnUsuarios");
                var slctUSuario = document.getElementById("slctUSuario");
                var txtidusu = document.getElementById("tr_int_idusu");
                var txtidusu_des = document.getElementById("tr_int_idusu_des");
                var btnElegirUsuario = document.getElementById("btnElegirUsuario");
                var usuarioSeleccionado = "";

                btnUsuarios.addEventListener("click", function (e) {
                    e.preventDefault();
                });

                slctUSuario.addEventListener("change", function (e) {
                    var usuarioSeleccionadoValue = this.value;
                    usuarioSeleccionado = this.options[this.selectedIndex].text;
                    txtidusu.value = usuarioSeleccionadoValue;


                });
                btnElegirUsuario.addEventListener("click", function (index) {
                    txtidusu_des.value = usuarioSeleccionado;
                    document.getElementById("btnCerrarUsuario").click();
                });

                //Variables para modal Tipo Trabajador
                var btnTipoTrabajador = document.getElementById("btnTipoTrabajador");
                var slctTipoTrabajador = document.getElementById("slctTipoTrabajador");
                var txtidtrab = document.getElementById("tr_int_idtipotrab");
                var txtidtrab_des = document.getElementById("tr_int_idtipotrab_des");
                var btnElegirTipoTrabajador = document.getElementById("btnElegirTipoTrabajador");
                var tipoTrabajadoSeleccionado = "";

                btnTipoTrabajador.addEventListener("click", function (e) {
                    e.preventDefault();
                });

                slctTipoTrabajador.addEventListener("change", function (e) {
                    var tipoTrabajadorSeleccionadoValue = this.value;
                    tipoTrabajadoSeleccionado = this.options[this.selectedIndex].text;
                    txtidtrab.value = tipoTrabajadorSeleccionadoValue;


                });
                btnElegirTipoTrabajador.addEventListener("click", function (index) {
                    txtidtrab_des.value = tipoTrabajadoSeleccionado;
                    document.getElementById("btnCerrarTipoTrabajador").click();
                });

            </script>
